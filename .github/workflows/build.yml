name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 7 * * *'
  push:
    branches:
      - master

jobs:
  build:
    if: contains(github.event.commits[0].message, '[skip ci]') == false &&
        github.repository == 'roblox-csharp/types' &&
        github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"

      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Install xmlstarlet
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet

      - name: Generate Files
        run: TypeGenerator/bin/Release/net8.0/TypeGenerator -o RobloxTypes

      - name: Push Generated Files
        run: |
          git add -A
          if ! git diff-index --quiet HEAD --; then
            echo "Generated files changed!"
            git commit -m "Update generated files [skip ci]"
            git push https://R-unic:${{ secrets.github_token }}@github.com/roblox-csharp/types.git HEAD:master
          fi

      - name: Copy Files to Deploy Branch and Publish
        run: |
          cd ..

          git clone --depth=50 --branch=deploy https://R-unic:${{ secrets.github_token }}@github.com/roblox-csharp/types.git deploy
          mkdir -p deploy/Include
          rm -rf deploy/Include/*
          cp -r types/RobloxTypes/* deploy/Include
          cp types/RobloxTypes/Generated/PluginSecurity.cs deploy/PluginSecurity.cs
          cp types/RobloxTypes/README.md deploy/README.md

          cd deploy

          git add -A
          if ! git diff-index --quiet HEAD --; then
            echo "Deploy changed!"
            if [ "$GITHUB_EVENT_NAME" == "push" ]; then
              git commit -m "Manual Update"
            else
              git commit -m "Automatic Update"
            fi

            set -x # Debug mode

            # Extract current version from .csproj
            CURRENT_VERSION=$(xmlstarlet sel -t -v "//Project/PropertyGroup/Version" ./RobloxTypes/RobloxTypes.csproj)
            echo "Current version: $CURRENT_VERSION"

            # Increment patch version
            IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
            PATCH_VERSION=$((version_parts[2] + 1))
            NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$PATCH_VERSION"
            echo "New version: $NEW_VERSION"

            # Update version in .csproj
            xmlstarlet ed -L -u "//Project/PropertyGroup/Version" -v "$NEW_VERSION" ./RobloxTypes/RobloxTypes.csproj

            # Commit version change
            git add ./RobloxTypes/RobloxTypes.csproj
            git commit -m "Bump version to $NEW_VERSION"
            git push https://R-unic:${{ secrets.github_token }}@github.com/roblox-csharp/types.git HEAD:master

            # Add GitHub source to NuGet
            dotnet nuget add source --username roblox-csharp --password ${{ secrets.github_token }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/roblox-csharp/index.json"

            # Package the project
            dotnet pack --configuration Release

            # Publish the package
            PACKAGE_PATH=$(find ./RobloxTypes/bin/Release -name "*.nupkg" -type f -print0 | xargs -0 ls -1t | head -n 1)
            dotnet nuget push "$PACKAGE_PATH" --api-key ${{ secrets.github_token }} --source "github"
          fi

      - name: Send Build Failure Notification
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
            severity: error
            details: Build Failed!
            webhookUrl: ${{ secrets.WEBHOOK_URL }}